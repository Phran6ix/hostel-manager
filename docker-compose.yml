networks:
  hostel-manager:
    driver: bridge

services:
  app:
    build: .
    ports:
      - "30001:30001"
    volumes:
      - ./:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - postgresdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30001/myhealth"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - hostel-manager
    command: npm start

  mongo:
    image: mongo:4.4.6
    volumes:
      - mongo-db:/data/db
    networks:
      - hostel-manager

    environment:
      - MONGO_USERNAME={{MONGO_USERNAME}}
      - MONGO_PASSWORD={{MONGO_PASSWORD}}
      - MONGO_URL={{MONGO_URL}}
    ports:
      - "27017:27017"

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - hostel-manager

  # mysql:
  #   image: mysql:8.0
  #   ports:
  #     - "3306:3306"
  #   restart: unless-stopped
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   environment:
  #     - MYSQL_ROOT_PASSWORD={{MYSQL_ROOT_PASSWORD}}
  #     - MYSQL_DATABASE={{MYSQL_DATABASE}}
  #     - MYSQL_USER={{MYSQL_USER}}
  #     - MYSQL_PASSWORD={{MYSQL_PASSWORD}}
  #   networks:
  #     - hostel-manager

  postgresdb:
    image: postgres:15
    ports:
      - 5432:5432
    restart: always

    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hostel-manager
volumes:
  mongo-db:
  mysql-data:
  postgres-data:
